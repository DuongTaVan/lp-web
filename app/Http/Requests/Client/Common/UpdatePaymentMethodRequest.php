<?php

namespace App\Http\Requests\Client\Common;

use App\Enums\Constant;
use Illuminate\Foundation\Http\FormRequest;

class UpdatePaymentMethodRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     *
     * @return bool
     */
    public function authorize()
    {
        return true;
    }

    public function getValidatorInstance()
    {
        $this->formatAccountNumber();
        return parent::getValidatorInstance(); // TODO: Change the autogenerated stub
    }

    protected function formatAccountNumber()
    {
        $this->merge([
            'number' => str_replace(' ', '', $this->request->get('number'))
        ]);
    }

    public function attributes()
    {
        return [
            'number' => 'カード番号',
            'exp_month' => '有効期限月',
            'exp_year' => '有効期限',
            'owner_bank' => 'カード名義人',
            'cvc' => 'カード名義人',
        ];
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array
     */
    public function rules()
    {
        return [
            'number' => 'required|min:13|max:16',
            'exp_month' => 'required|between:1,12|numeric',
            'exp_year' => 'required|digits:2',
            'owner_bank' => 'required|max:80',
            'cvc' => 'required|between:3,4',
            'courseScheduleId' => 'nullable',
            'payment_route' => 'nullable'
        ];
    }

    public function messages()
    {
        return [
            'number.required' => 'カード番号を正しく入力してください。',
//            'exp_month.required' => '有効期限は必ず入力してください。',
//            'exp_year.required' => '有効期限は必ず入力してください。',

            'exp_month.required' => Constant::REQUIRED_ERROR,
            'exp_year.required' => Constant::REQUIRED_ERROR,
            'owner_bank.required' => 'カード名義人は必ず入力してください。',
            'cvc.required' => 'セキュリティコードは必ず入力してください。',
            'cvc.between' => 'セキュリティコードは3桁または4桁である必要となります。',
        ];
    }
}
